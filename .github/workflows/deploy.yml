# name: deploy-ssh-compose

# on:
#   push:
#     branches: ["main"]   # main에 push되면 자동 실행
#   workflow_dispatch:

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Setup SSH
#         run: |
#           mkdir -p ~/.ssh
#           echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
#           chmod 600 ~/.ssh/id_rsa
#           ssh-keyscan -H "${{ secrets.EC2_HOST }}" >> ~/.ssh/known_hosts

#       - name: EC2 배포
#         run: |
#           ssh -o StrictHostKeyChecking=yes ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
#           set -euo pipefail

#           cd "${{ secrets.PROJECT_DIR }}"

#           # 1) 최신화
#           git fetch --all
#           git reset --hard origin/main

#           FILE="docker-compose.prod.yml"

#           # 2) 컨테이너 다운
#           echo "[2단계] 이전 컨테이너 종료"
#           docker-compose -p sl-app -f $FILE down --remove-orphans || true

#           # 3) 컨테이너 실행
#           echo "[3단계] 새로운 컨테이너 실행"
#           docker-compose -p sl-app -f $FILE up -d --build --remove-orphans

#           # 4) 상태 확인
#           echo "[4단계] 실행 중인 서비스 확인"
#           docker-compose -p sl-app -f $FILE ps

#           # 5) 최근 로그 20줄
#           echo "[5단계] 최근 로그 20줄"
#           docker-compose -p sl-app -f $FILE logs --tail=20 app || true

#           # 6) 이미지 정리
#           docker image prune -f || true
#           EOF
