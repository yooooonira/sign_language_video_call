version: "3.9"

services:
  app:
    build:
      context: ./drf_api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    restart: always
    # 컨테이너 시작 시 자동으로 읽음(비밀번호, API키 등)
    env_file:
      - drf_api/.env
    # 런타임 환경변수로 바로 주입, 단일 또는 고정 값 설정에 편리(DJANGO_SETTINGS_MODULE 등)
    environment:
      - DJANGO_SETTINGS_MODULE=drf_api.settings
    volumes:
      - /home/ec2-user/sign_language_video_call/static:/vol/web/static
      - /home/ec2-user/sign_language_video_call/media:/vol/web/media

    depends_on:
      - db
      - redis

    networks: #promethus가 접근할 수 있도록 공용 네트워크
      - default
      - monitoring_net

  db:
    image: postgres:15
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data

    env_file:
      - drf_api/.env

    networks: #db metric을 가져올 거라면 필요 (필수 X)
      - default

  redis: # <- 추가
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    networks:
      - default
  
  ai:
    build:
      context: ./fastapi_api
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8001:8001"
    env_file:
      - fastapi_api/.env 
 

  prometheus:
    image: prom/prometheus:v2.54.1
    restart: always
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=15d
      - --web.enable-lifecycle
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml:ro
      - prometheus-data:/prometheus
    networks: [monitoring_net]


  alertmanager:
    image: prom/alertmanager:v0.28.1
    restart: always
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
      - --storage.path=/alertmanager
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager-data:/alertmanager
      - ./alertmanager/secrets:/etc/alertmanager/secrets:ro  
    networks: [monitoring_net]


  grafana:
    image: grafana/grafana:10.4.5
    restart: always
    env_file:
      - drf_api/.env 
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SERVER_ROOT_URL=https://grafana.5range.site
      - GF_AUTH_ANONYMOUS_ENABLED=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks: [monitoring_net]
    ports:
      - "127.0.0.1:3000:3000"


volumes:
  postgres-data:
  static-data:
  prometheus-data:
  grafana-data:
  alertmanager-data:

networks: #네트워크 블록 추가
  default:
  monitoring_net: #monitoring_net을 external 네크워크로 선언.
    external: true
